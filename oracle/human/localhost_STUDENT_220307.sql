-- 1행 1열의 단 하나의 값을 반환하는 서브쿼리 >> 스칼라 서브쿼리

--
SELECT STUDNO, S.NAME, GRADE, S.DEPTNO, PROFNO, P.NAME, POSITION
FROM STUDENT S
LEFT JOIN PROFESSOR P USING(PROFNO);

SELECT STUDNO, S.NAME, GRADE, S.DEPTNO, PROFNO, P.NAME, POSITION
FROM STUDENT S
FULL JOIN PROFESSOR P USING(PROFNO)
ORDER BY GRADE;

-- 서브쿼리
SELECT *
FROM PROFESSOR
WHERE POSITION = '교수';

-- 사용자 아이디가 "jun123"인 학생과 같은 학년인 학생의 학번, 이름, 학년을 출력하여라.
SELECT STUDNO, NAME, GRADE
FROM STUDENT
WHERE GRADE =
(SELECT GRADE
FROM STUDENT
WHERE USERID = 'jun123');

-- 101번 학과 학생들의 평균 몸무게보다 몸무게가 적은 학생의 이름, 학과번호, 몸무게를 출력하여라.
SELECT NAME, DEPTNO, WEIGHT
FROM STUDENT
WHERE
    WEIGHT < (
        SELECT AVG(WEIGHT)
        FROM STUDENT
        WHERE DEPTNO = 101
    )
;

-- 20101번 학생과 학년이 같고, 키는 20101번 학생보다 큰 학생의 이름, 학년, 키를 출력하여라.
SELECT GRADE
FROM STUDENT
WHERE STUDNO = 20101;

SELECT HEIGHT
FROM STUDENT
WHERE STUDNO = 20101;

SELECT NAME, GRADE, HEIGHT
FROM STUDENT
WHERE
    GRADE = (
        SELECT GRADE
        FROM STUDENT
        WHERE STUDNO = 20101
    )
AND
    HEIGHT > (
        SELECT HEIGHT
        FROM STUDENT
        WHERE STUDNO = 20101
    )
;

-- ANY = 부분일치, ALL = 전체일치
SELECT *
FROM DEPARTMENT
WHERE COLLEGE = 100;

-- 정보미디어학부(부서번호 : 100)에 소속된 모든 학생의 학번, 이름, 학과번호를 출력하여라.
SELECT DEPTNO
FROM DEPARTMENT
WHERE COLLEGE = (
    SELECT DEPTNO
    FROM DEPARTMENT
    WHERE DNAME = '정보미디어학부'
);

SELECT STUDNO, NAME, DEPTNO
FROM STUDENT
WHERE DEPTNO IN (
    SELECT DEPTNO
    FROM DEPARTMENT
    WHERE COLLEGE = (
        SELECT DEPTNO
        FROM DEPARTMENT
        WHERE DNAME = '정보미디어학부'
    )
);

-- 모든 학생 중에서 4학년 학생 중에서 키가 제일 작은 학생보다 키가 큰 학생의 학번, 이름, 키를 출력하여라.
--SELECT STUDNO, NAME, HEIGHT
--FROM STUDENT
--WHERE HEIGHT > ( -- ERROR
--SELECT HEIGHT
--FROM STUDENT
--WHERE GRADE = 4);

SELECT STUDNO, NAME, HEIGHT
FROM STUDENT
WHERE HEIGHT > ANY (
    SELECT HEIGHT
    FROM STUDENT
    WHERE GRADE = 4
);
    
SELECT STUDNO, NAME, HEIGHT
FROM STUDENT
WHERE HEIGHT > (
    SELECT MIN(HEIGHT)
    FROM STUDENT
    WHERE GRADE = 4
);

-- 모든 학생 중에서 4학년 학생 중에서 키가 제일 큰 학생보다 키가 큰 학생의 학번, 이름, 키를 출력하여라.
SELECT STUDNO, NAME, HEIGHT
FROM STUDENT
WHERE HEIGHT > ALL (
    SELECT HEIGHT
    FROM STUDENT
    WHERE GRADE = 4
);

SELECT STUDNO, NAME, HEIGHT
FROM STUDENT
WHERE HEIGHT > (
    SELECT MAX(HEIGHT)
    FROM STUDENT
    WHERE GRADE = 4
);

-- 모든 학생 중에서 4학년 학생 중에서 키가 제일 큰 학생보다 키가 작은 학생의 학번, 이름, 키를 출력하여라.
SELECT STUDNO, NAME, HEIGHT , GRADE
FROM STUDENT
WHERE HEIGHT < ANY (
    SELECT HEIGHT
    FROM STUDENT
    WHERE GRADE = 4
);

SELECT STUDNO, NAME, HEIGHT, GRADE
FROM STUDENT
WHERE HEIGHT < (
    SELECT MAX(HEIGHT)
    FROM STUDENT
    WHERE GRADE = 4
);

-- 보직수당을 받는 교수가 한 명이라도 있으면 모든 교수의 교수번호, 이름, 보직수당 그리고 급여와 보직수당의 합을 출력하여라.
SELECT PROFNO, NAME, COMM, SAL+COMM
FROM PROFESSOR
WHERE EXISTS (
    SELECT *
    FROM PROFESSOR
    WHERE COMM IS NOT NULL
);

-- PAIRWISE 비교방법에 의해 학년 별로 몸무게가 최소인 학생의 이름, 학년, 몸무게를 출력하여라.
SELECT NAME, GRADE, WEIGHT
FROM STUDENT
WHERE (GRADE, WEIGHT) IN (
    SELECT GRADE, MIN(WEIGHT)
    FROM STUDENT
    GROUP BY GRADE
);

-- UNPAIRWISE 비교방법에 의해 학년 별로 몸무게가 최소인 학생의 이름, 학년, 몸무게를 출력하여라.
SELECT NAME, GRADE, WEIGHT
FROM STUDENT
WHERE GRADE IN (
    SELECT GRADE
    FROM STUDENT
    GROUP BY GRADE)
AND WEIGHT IN (
    SELECT MIN(WEIGHT)
    FROM STUDENT
    GROUP BY GRADE)
ORDER BY 2;

-- 상호연관 서브쿼리
-- 각 학과 학생의 평균 키보다 키가 큰 학생의 이름, 학과 번호, 키를 출력하여라.
SELECT AVG(HEIGHT)
FROM STUDENT
GROUP BY DEPTNO;

SELECT STUDNO, NAME, DEPTNO, HEIGHT
FROM STUDENT S1
WHERE HEIGHT > (SELECT AVG(HEIGHT)
    FROM STUDENT S2
    WHERE S1.DEPTNO = S2.DEPTNO
    GROUP BY DEPTNO
);

-- 학번, 이름, 학과번호, 학과이름 조인, 서브쿼리
SELECT * FROM DEPARTMENT;

SELECT STUDNO, NAME, DEPTNO, DNAME
FROM STUDENT
JOIN DEPARTMENT USING (DEPTNO);

SELECT
    STUDNO, NAME, DEPTNO, (
        SELECT DNAME
        FROM DEPARTMENT D
        WHERE S.DEPTNO = D.DEPTNO
    ) DNAME
FROM STUDENT S;

-- 데이터 조작어
-- DDL DML DCL
-- DDL : DATA DEFINITION LANGUAGE 데이터 정의어
-- CREATE, ALTER, DROP, TRUNCATE, REPLACE, ...
-- DNL : DATA MANUFACTUAL LANGUAGE 데이터 조작어
-- INSERT, UPDATE, DELETE, MERGE // SELECT는 DQL 좀 애매하다.
-- DCL : DATA CONTROL LANGUAGE 데이터 제어어
-- COMMIT, ROLLBACK, SAVEPOINT, GRANT, REVOKE ...
-- COMMIT, ROLLBACK, SAVEPOINT >> TCL

INSERT INTO STUDENT
VALUES (10110, '홍길동', 'hong', '1', '8501011149098', '85/01/01', '041)630-3114', 170, 70, 101, 9903);

SELECT * FROM STUDENT;

ROLLBACK;

COMMIT;